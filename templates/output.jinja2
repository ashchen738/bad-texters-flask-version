<html lang="en">

    <head>
        <title>How Bad Is Your Texting?</title>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width,initial-scale=1" />
        <meta name="description" content="" />
        <link rel="icon" href="img/logo.png">
        <link rel="stylesheet" media="all" href="../static/styles/setup.css" />
        <link rel="stylesheet" media="all" href="../static/styles/says.css" />
        <link rel="stylesheet" media="all" href="../static/styles/reply.css" />
        <link rel="stylesheet" media="all" href="../static/styles/typing.css" />
        <link rel="stylesheet" media="all" href="../static/styles/input.css" />
        <meta name="theme-color" content="">
        <meta property="og:title" content="" />
        <meta property="og:description" content="" />
        <meta property="og:image" content="" />
        <meta name="twitter:card" content="">
        <meta name="twitter:site" content="">
        <meta name="twitter:title" content="">
        <meta name="twitter:description" content="">
        <meta name="twitter:image" content="">
    </head>

    <body>
        <div id="loader"></div>
        <div id="chat"></div>
        <script type="text/javascript" src="../static/js/Bubbles.js"></script>
        <script type="text/javascript">
            // initialize by constructing a named function...
            // ...and add text processing plugin:
            var chatWindow = new Bubbles(document.getElementById("chat"), "chatWindow", {
                // the one that we care about is inputCallbackFn()
                // this function returns an object with some data that we can process from user input
                // and understand the context of it

                // this is an example function that matches the text user typed to one of the answer bubbles
                // this function does no natural language processing
                // this is where you may want to connect this script to NLC backend.
                inputCallbackFn: function (o) {
                    // add error conversation block & recall it if no answer matched
                    var miss = function () {
                        chatWindow.talk(
                            {
                                "i-dont-get-it": {
                                    says: [
                                        "Sorry, I don't get it ðŸ˜•. Pls repeat? Or you can just click below ðŸ‘‡"
                                    ],
                                    reply: o.convo[o.standingAnswer].reply
                                }
                            },
                            "i-dont-get-it"
                        );
                    };

                    // do this if answer found
                    var match = function (key) {
                        setTimeout(function () {
                            chatWindow.talk(convo, key) // restart current convo from point found in the answer
                        }, 600)
                    };

                    // sanitize text for search function
                    var strip = function (text) {
                        return text.toLowerCase().replace(/[\s.,\/#!$%\^&\*;:{}=\-_'"`~()]/g, "")
                    };

                    // search function
                    var found = false;
                    o.convo[o.standingAnswer].reply.forEach(function (e, i) {
                        strip(e.question).includes(strip(o.input)) && o.input.length > 0
                            ? (found = e.answer)
                            : found ? null : (found = false)
                    });
                    found ? match(found) : miss();
                }
            }) // done setting up chat-bubble

            // conversation object defined separately, but just the same as in the
            // "Basic chat-bubble Example" (1-basics.html)
            var convo = {
                ice: {
                    says: ["Upload complete!", "Loading text historyâ€¦", "Analyzing awkward conversationsâ€¦", "Parsing through embarrassing momentsâ€¦", "Wowâ€¦", "You say [most used word] way too much.", "â€¦WAY too much.", "Here are your top 3 most used words: {{senderdict.common_words[0]}}, {{senderdict.common_words[1]}}, {{senderdict.common_words[2]}} </br>1. [word 1] </br>2. [word 2] </br>3. [word 3]", "Hmmmâ€¦", "Oh boy, another ghoster.", "You have an average response time of {{senderdict.react}}?!", "WHY??"],
                    reply: [
                        {
                            question: "I'm busy...",
                            answer: "sentiment"
                        },
                    ]
                },
                "sentiment": {
                    says: ["Excuses, excuses.", "At least you're somewhat [positive/negative].", "{{senderdict.sentiment}}% to be exact.", "Quick question.", "Glass half empty or half full?"],
                    reply: [
                        {
                        question: "Half empty",
                        answer: "half-empty"
                        },
                        {
                        question: "Half full",
                        answer: "half-full"
                        }
                    ]
                },
                "half-empty": {
                    says: ["One thing we can agree onâ€¦"],
                    reply: [
                        {
                        question: "No, not really.",
                        answer: "left_on_read"
                        }
                    ]
                },
                "half-full": {
                    says: ["Ugh. Positivity isn't my strong suit."],
                    reply: [
                        {
                        question: "Not for me.",
                        answer: "left_on_read"
                        }
                    ]
                },
                "left_on_read": {
                    says: ["Moving onâ€¦.", "Looking through cringy jokesâ€¦", "Omg.", "OMG.", "You've left your friend on read {{senderdict.left_on_read}} times?!", "Like on purpose?"],
                    reply: [
                        {
                            question: "...Yes.",
                            answer: "stats"
                        },
                        {
                            question: "No",
                            answer: "stats"
                        }
                    ]
                },
                "full_stats": {
                    says: ["â€¦Okay then.", "Here are your full stats: </br>Average response time: {{senderdict.react}}</br>Most used word: {{senderdict.common_words[0]}}"]
                },
                "total_score": {
                    says: ["Alright, here\â€™s your final score.", "Drumroll, pleaseâ€¦", "â€¦{{senderdict.overall_score}}", "Conclusion: You suck."]
                }
            }
        </script>
    </body>

</html>